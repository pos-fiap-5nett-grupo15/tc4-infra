# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - dev

  paths:
    include:
      - grafana/*


resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: $(_dockerRegistryServiceConnection)
  containerRegistry: $(_containerRegistry)
  k8s-deployment: $(_k8s-deployment)
  k8sPathName: 'k8s/grafana/k8s.dev.yaml'
  kubernetesServiceEndpoint: $(_kubernetesServiceEndpoint)
  kubernetesNamespace: $(_k8sNamespace)
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

  # Grafana
  grafanaImageRepository: 'grafana'
  grafanaDockerfilePath: 'grafana/Dockerfile'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build Grafana
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo Show ws files.
          echo $(ls)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(grafanaImageRepository)
        dockerfile: $(grafanaDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

  - job: UploadArtifact
    displayName: "Upload Deployment YAML"
    dependsOn: Build
    steps:

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/grafana/k8s.dev.yaml
        artifact: $(k8s-deployment)
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: DeployDatabase
    displayName: Deploy monitoring to AKS
    steps:
      - script: ls $(System.DefaultWorkingDirectory)/grafana
        displayName: "Check folder grafana"
      - script: |
          cat $(System.DefaultWorkingDirectory)/sql-server/k8s.dev.yaml
          sed -i 's/PLACEHOLDER_NAMESPACE/$(kubernetesNamespace)/g' $(System.DefaultWorkingDirectory)/$(k8sPathName)
          sed -i 's/PLACEHOLDER_CONTAINER_REGISTRY/$(containerRegistry)/g' $(System.DefaultWorkingDirectory)/$(k8sPathName)
          sed -i 's/PLACEHOLDER_IMAGE_REPOSITORY/$(imageRepository)/g' $(System.DefaultWorkingDirectory)/$(k8sPathName)
        displayName: 'Replace variables in YAML'
      - task: kubernetes@1
        displayName: "Apply Deployment YAML"
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
          namespace: $(kubernetesNamespace)
          command: apply
          arguments: -f $(System.DefaultWorkingDirectory)/$(k8sPathName)