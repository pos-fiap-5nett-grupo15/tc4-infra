# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - dev

  paths:
    include:
      - sql-server/*


resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '596527a0-844e-4fd1-af71-888334b640ff'
  imageRepository: 'sql-server-seed'
  containerRegistry: 'fiaptech3acr.azurecr.io'
  dockerfilePath: 'sql-server/Dockerfile'
  k8s-deployment: 'k8s-deployment-yaml'
  k8sPathName: 'k8s'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  - job: UploadArtifact
    displayName: "Upload Deployment YAML"
    #dependsOn: Build
    steps:
    - script: ls $(System.DefaultWorkingDirectory)
      displayName: "Check folder $(System.DefaultWorkingDirectory)"
    - script: ls $(Pipeline.Workspace)
      displayName: "Check folder $(Pipeline.Workspace)"
    - script: mkdir -p $(System.DefaultWorkingDirectory)/$(k8sPathName)
      displayName: "Create artifact folder"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/$(k8sPathName)
        artifact: $(k8s-deployment)
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: DeployDatabase
    displayName: Deploy Sql Server to AKS
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: $(k8s-deployment)
          targetPath: $(System.DefaultWorkingDirectory)/$(k8sPathName)
      - task: kubernetes@1
        displayName: "Apply Deployment YAML"
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'fiap-aks-service-conn'
          namespace: 'tc3'
          command: 'apply'
          useConfigurableFile: true
          configuration: '$(System.DefaultWorkingDirectory)/$(k8sPathName)/k8s-dev.yaml'