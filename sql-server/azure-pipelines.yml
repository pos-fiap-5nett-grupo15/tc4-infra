# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - dev
      - feat/terraform

  paths:
    include:
      - sql-server/*


resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: $(_dockerRegistryServiceConnection)
  imageRepository: $(_imageRepository)
  containerRegistry: $(_containerRegistry)
  dockerfilePath: $(_dockerfilePath)
  k8s-deployment: $(_k8s-deployment)
  k8sPathName: 'k8s'
  tag: '$(Build.BuildId)'
  k8sNamespace: $(_k8sNamespace)
  kubernetesServiceEndpoint: $(_kubernetesServiceEndpoint)

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo Show ws files.
          echo $(ls)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: fiap-acr-service-conn
        tags: |
          $(tag)
          latest

  - job: UploadArtifact
    displayName: "Upload Deployment YAML"
    dependsOn: Build
    steps:

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/sql-server/k8s.dev.yaml
        artifact: $(k8s-deployment)
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: DeployDatabase
    displayName: Deploy Sql Server to AKS
    steps:
      - script: ls $(System.DefaultWorkingDirectory)/sql-server
        displayName: "Check folder sql-server"
        
      - script: |
          sed -i 's/PLACEHOLDER_NAMESPACE/$(k8sNamespace)/g' $(System.DefaultWorkingDirectory)/sql-server/k8s.dev.yaml
          sed -i 's/PLACEHOLDER_CONTAINER_REGISTRY/$(containerRegistry)/g' $(System.DefaultWorkingDirectory)/sql-server/k8s.dev.yaml
        displayName: 'Replace variables in YAML'
        
      - task: kubernetes@1
        displayName: "Apply Deployment YAML"
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: fiap-aks-service-conn
          namespace: $(k8sNamespace)
          command: apply
          arguments: -f $(System.DefaultWorkingDirectory)/sql-server/k8s.dev.yaml